name: Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # Update to use Node.js 20

      - name: Log in to Docker Hub
        uses: docker/login-action@v2  # Update to use Node.js 20
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image (Latest)
        run: docker build --no-cache --build-arg STATIC_URL_LATEST=${{ secrets.STATIC_URL_LATEST }} --build-arg STATIC_URL_BASEGAME=${{ secrets.STATIC_URL_BASEGAME }} -f Dockerfile.latest -t oksii/etlegacy:latest .

      - name: Push Docker Image (Latest)
        run: docker push oksii/etlegacy:latest

      - name: Build Docker Image (Stable)
        run: docker build --no-cache --build-arg STATIC_URL_STABLE=${{ secrets.STATIC_URL_STABLE }} --build-arg STATIC_URL_BASEGAME=${{ secrets.STATIC_URL_BASEGAME }} -f Dockerfile.stable -t oksii/etlegacy:stable .

      - name: Push Docker Image (Stable)
        run: docker push oksii/etlegacy:stable

  send-api-request:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Check Domain Availability
        id: check_domain
        run: |
          for domain in ${{ secrets.SERVER_URL_LIST }}; do
            if curl --output /dev/null --silent --head --fail http://$domain:8080; then
              echo "::set-output name=domain::$domain"
              exit 0
            fi
          done
          exit 1
      - name: Send HTTP API Request
        if: steps.check_domain.outputs.domain
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.WATCHTOWER_API_TOKEN }}" http://${{ steps.check_domain.outputs.domain }}:8080/v1/update